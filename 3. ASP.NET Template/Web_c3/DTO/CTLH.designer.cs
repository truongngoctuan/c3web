#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3615
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DTO
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[System.Data.Linq.Mapping.DatabaseAttribute(Name="CongTyLuHanh")]
	public partial class CTLHDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertXE(XE instance);
    partial void UpdateXE(XE instance);
    partial void DeleteXE(XE instance);
    partial void InsertCHO_NGOI(CHO_NGOI instance);
    partial void UpdateCHO_NGOI(CHO_NGOI instance);
    partial void DeleteCHO_NGOI(CHO_NGOI instance);
    partial void InsertCHUC_NANG(CHUC_NANG instance);
    partial void UpdateCHUC_NANG(CHUC_NANG instance);
    partial void DeleteCHUC_NANG(CHUC_NANG instance);
    partial void InsertCHUYEN_XE(CHUYEN_XE instance);
    partial void UpdateCHUYEN_XE(CHUYEN_XE instance);
    partial void DeleteCHUYEN_XE(CHUYEN_XE instance);
    partial void InsertDAT_CHO(DAT_CHO instance);
    partial void UpdateDAT_CHO(DAT_CHO instance);
    partial void DeleteDAT_CHO(DAT_CHO instance);
    partial void InsertLOAI_NHAN_VIEN(LOAI_NHAN_VIEN instance);
    partial void UpdateLOAI_NHAN_VIEN(LOAI_NHAN_VIEN instance);
    partial void DeleteLOAI_NHAN_VIEN(LOAI_NHAN_VIEN instance);
    partial void InsertLOAI_XE(LOAI_XE instance);
    partial void UpdateLOAI_XE(LOAI_XE instance);
    partial void DeleteLOAI_XE(LOAI_XE instance);
    partial void InsertNHAN_VIEN(NHAN_VIEN instance);
    partial void UpdateNHAN_VIEN(NHAN_VIEN instance);
    partial void DeleteNHAN_VIEN(NHAN_VIEN instance);
    partial void InsertPHAN_HOI(PHAN_HOI instance);
    partial void UpdatePHAN_HOI(PHAN_HOI instance);
    partial void DeletePHAN_HOI(PHAN_HOI instance);
    partial void InsertPHAN_HOI_KHACH_HANG(PHAN_HOI_KHACH_HANG instance);
    partial void UpdatePHAN_HOI_KHACH_HANG(PHAN_HOI_KHACH_HANG instance);
    partial void DeletePHAN_HOI_KHACH_HANG(PHAN_HOI_KHACH_HANG instance);
    partial void InsertPHAN_QUYEN(PHAN_QUYEN instance);
    partial void UpdatePHAN_QUYEN(PHAN_QUYEN instance);
    partial void DeletePHAN_QUYEN(PHAN_QUYEN instance);
    partial void InsertTAI_KHOAN(TAI_KHOAN instance);
    partial void UpdateTAI_KHOAN(TAI_KHOAN instance);
    partial void DeleteTAI_KHOAN(TAI_KHOAN instance);
    partial void InsertTIN_TUC(TIN_TUC instance);
    partial void UpdateTIN_TUC(TIN_TUC instance);
    partial void DeleteTIN_TUC(TIN_TUC instance);
    partial void InsertTINH_TRANG_DAT_CHO(TINH_TRANG_DAT_CHO instance);
    partial void UpdateTINH_TRANG_DAT_CHO(TINH_TRANG_DAT_CHO instance);
    partial void DeleteTINH_TRANG_DAT_CHO(TINH_TRANG_DAT_CHO instance);
    partial void InsertTINH_TRANG_XE(TINH_TRANG_XE instance);
    partial void UpdateTINH_TRANG_XE(TINH_TRANG_XE instance);
    partial void DeleteTINH_TRANG_XE(TINH_TRANG_XE instance);
    partial void InsertTUYEN_XE(TUYEN_XE instance);
    partial void UpdateTUYEN_XE(TUYEN_XE instance);
    partial void DeleteTUYEN_XE(TUYEN_XE instance);
    partial void InsertTRAM_XE(TRAM_XE instance);
    partial void UpdateTRAM_XE(TRAM_XE instance);
    partial void DeleteTRAM_XE(TRAM_XE instance);
    #endregion
		
		public CTLHDataContext() : 
				base(global::DTO.Properties.Settings.Default.CongTyLuHanhConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public CTLHDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public CTLHDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public CTLHDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public CTLHDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<XE> XEs
		{
			get
			{
				return this.GetTable<XE>();
			}
		}
		
		public System.Data.Linq.Table<CHO_NGOI> CHO_NGOIs
		{
			get
			{
				return this.GetTable<CHO_NGOI>();
			}
		}
		
		public System.Data.Linq.Table<CHUC_NANG> CHUC_NANGs
		{
			get
			{
				return this.GetTable<CHUC_NANG>();
			}
		}
		
		public System.Data.Linq.Table<CHUYEN_XE> CHUYEN_XEs
		{
			get
			{
				return this.GetTable<CHUYEN_XE>();
			}
		}
		
		public System.Data.Linq.Table<DAT_CHO> DAT_CHOs
		{
			get
			{
				return this.GetTable<DAT_CHO>();
			}
		}
		
		public System.Data.Linq.Table<LOAI_NHAN_VIEN> LOAI_NHAN_VIENs
		{
			get
			{
				return this.GetTable<LOAI_NHAN_VIEN>();
			}
		}
		
		public System.Data.Linq.Table<LOAI_XE> LOAI_XEs
		{
			get
			{
				return this.GetTable<LOAI_XE>();
			}
		}
		
		public System.Data.Linq.Table<NHAN_VIEN> NHAN_VIENs
		{
			get
			{
				return this.GetTable<NHAN_VIEN>();
			}
		}
		
		public System.Data.Linq.Table<PHAN_HOI> PHAN_HOIs
		{
			get
			{
				return this.GetTable<PHAN_HOI>();
			}
		}
		
		public System.Data.Linq.Table<PHAN_HOI_KHACH_HANG> PHAN_HOI_KHACH_HANGs
		{
			get
			{
				return this.GetTable<PHAN_HOI_KHACH_HANG>();
			}
		}
		
		public System.Data.Linq.Table<PHAN_QUYEN> PHAN_QUYENs
		{
			get
			{
				return this.GetTable<PHAN_QUYEN>();
			}
		}
		
		public System.Data.Linq.Table<TAI_KHOAN> TAI_KHOANs
		{
			get
			{
				return this.GetTable<TAI_KHOAN>();
			}
		}
		
		public System.Data.Linq.Table<TIN_TUC> TIN_TUCs
		{
			get
			{
				return this.GetTable<TIN_TUC>();
			}
		}
		
		public System.Data.Linq.Table<TINH_TRANG_DAT_CHO> TINH_TRANG_DAT_CHOs
		{
			get
			{
				return this.GetTable<TINH_TRANG_DAT_CHO>();
			}
		}
		
		public System.Data.Linq.Table<TINH_TRANG_XE> TINH_TRANG_XEs
		{
			get
			{
				return this.GetTable<TINH_TRANG_XE>();
			}
		}
		
		public System.Data.Linq.Table<TUYEN_XE> TUYEN_XEs
		{
			get
			{
				return this.GetTable<TUYEN_XE>();
			}
		}
		
		public System.Data.Linq.Table<TRAM_XE> TRAM_XEs
		{
			get
			{
				return this.GetTable<TRAM_XE>();
			}
		}
	}
	
	[Table(Name="dbo.XE")]
	public partial class XE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaXe;
		
		private string _BienSoXe;
		
		private System.Nullable<int> _MaTaiXe;
		
		private System.Nullable<System.DateTime> _NgayNhap;
		
		private System.Nullable<int> _MaLoaiXe;
		
		private System.Nullable<int> _TinhTrang;
		
		private EntityRef<LOAI_XE> _LOAI_XE;
		
		private EntityRef<NHAN_VIEN> _NHAN_VIEN;
		
		private EntityRef<TINH_TRANG_XE> _TINH_TRANG_XE;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaXeChanging(int value);
    partial void OnMaXeChanged();
    partial void OnBienSoXeChanging(string value);
    partial void OnBienSoXeChanged();
    partial void OnMaTaiXeChanging(System.Nullable<int> value);
    partial void OnMaTaiXeChanged();
    partial void OnNgayNhapChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayNhapChanged();
    partial void OnMaLoaiXeChanging(System.Nullable<int> value);
    partial void OnMaLoaiXeChanged();
    partial void OnTinhTrangChanging(System.Nullable<int> value);
    partial void OnTinhTrangChanged();
    #endregion
		
		public XE()
		{
			this._LOAI_XE = default(EntityRef<LOAI_XE>);
			this._NHAN_VIEN = default(EntityRef<NHAN_VIEN>);
			this._TINH_TRANG_XE = default(EntityRef<TINH_TRANG_XE>);
			OnCreated();
		}
		
		[Column(Storage="_MaXe", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaXe
		{
			get
			{
				return this._MaXe;
			}
			set
			{
				if ((this._MaXe != value))
				{
					this.OnMaXeChanging(value);
					this.SendPropertyChanging();
					this._MaXe = value;
					this.SendPropertyChanged("MaXe");
					this.OnMaXeChanged();
				}
			}
		}
		
		[Column(Storage="_BienSoXe", DbType="NVarChar(50)")]
		public string BienSoXe
		{
			get
			{
				return this._BienSoXe;
			}
			set
			{
				if ((this._BienSoXe != value))
				{
					this.OnBienSoXeChanging(value);
					this.SendPropertyChanging();
					this._BienSoXe = value;
					this.SendPropertyChanged("BienSoXe");
					this.OnBienSoXeChanged();
				}
			}
		}
		
		[Column(Storage="_MaTaiXe", DbType="Int")]
		public System.Nullable<int> MaTaiXe
		{
			get
			{
				return this._MaTaiXe;
			}
			set
			{
				if ((this._MaTaiXe != value))
				{
					if (this._NHAN_VIEN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaTaiXeChanging(value);
					this.SendPropertyChanging();
					this._MaTaiXe = value;
					this.SendPropertyChanged("MaTaiXe");
					this.OnMaTaiXeChanged();
				}
			}
		}
		
		[Column(Storage="_NgayNhap", DbType="DateTime")]
		public System.Nullable<System.DateTime> NgayNhap
		{
			get
			{
				return this._NgayNhap;
			}
			set
			{
				if ((this._NgayNhap != value))
				{
					this.OnNgayNhapChanging(value);
					this.SendPropertyChanging();
					this._NgayNhap = value;
					this.SendPropertyChanged("NgayNhap");
					this.OnNgayNhapChanged();
				}
			}
		}
		
		[Column(Storage="_MaLoaiXe", DbType="Int")]
		public System.Nullable<int> MaLoaiXe
		{
			get
			{
				return this._MaLoaiXe;
			}
			set
			{
				if ((this._MaLoaiXe != value))
				{
					if (this._LOAI_XE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaLoaiXeChanging(value);
					this.SendPropertyChanging();
					this._MaLoaiXe = value;
					this.SendPropertyChanged("MaLoaiXe");
					this.OnMaLoaiXeChanged();
				}
			}
		}
		
		[Column(Storage="_TinhTrang", DbType="Int")]
		public System.Nullable<int> TinhTrang
		{
			get
			{
				return this._TinhTrang;
			}
			set
			{
				if ((this._TinhTrang != value))
				{
					if (this._TINH_TRANG_XE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTinhTrangChanging(value);
					this.SendPropertyChanging();
					this._TinhTrang = value;
					this.SendPropertyChanged("TinhTrang");
					this.OnTinhTrangChanged();
				}
			}
		}
		
		[Association(Name="LOAI_XE_XE", Storage="_LOAI_XE", ThisKey="MaLoaiXe", OtherKey="MaLoaixe", IsForeignKey=true)]
		public LOAI_XE LOAI_XE
		{
			get
			{
				return this._LOAI_XE.Entity;
			}
			set
			{
				LOAI_XE previousValue = this._LOAI_XE.Entity;
				if (((previousValue != value) 
							|| (this._LOAI_XE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LOAI_XE.Entity = null;
						previousValue.XEs.Remove(this);
					}
					this._LOAI_XE.Entity = value;
					if ((value != null))
					{
						value.XEs.Add(this);
						this._MaLoaiXe = value.MaLoaixe;
					}
					else
					{
						this._MaLoaiXe = default(Nullable<int>);
					}
					this.SendPropertyChanged("LOAI_XE");
				}
			}
		}
		
		[Association(Name="NHAN_VIEN_XE", Storage="_NHAN_VIEN", ThisKey="MaTaiXe", OtherKey="MaNhanVien", IsForeignKey=true)]
		public NHAN_VIEN NHAN_VIEN
		{
			get
			{
				return this._NHAN_VIEN.Entity;
			}
			set
			{
				NHAN_VIEN previousValue = this._NHAN_VIEN.Entity;
				if (((previousValue != value) 
							|| (this._NHAN_VIEN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NHAN_VIEN.Entity = null;
						previousValue.XEs.Remove(this);
					}
					this._NHAN_VIEN.Entity = value;
					if ((value != null))
					{
						value.XEs.Add(this);
						this._MaTaiXe = value.MaNhanVien;
					}
					else
					{
						this._MaTaiXe = default(Nullable<int>);
					}
					this.SendPropertyChanged("NHAN_VIEN");
				}
			}
		}
		
		[Association(Name="TINH_TRANG_XE_XE", Storage="_TINH_TRANG_XE", ThisKey="TinhTrang", OtherKey="MaTinhTrangXe", IsForeignKey=true)]
		public TINH_TRANG_XE TINH_TRANG_XE
		{
			get
			{
				return this._TINH_TRANG_XE.Entity;
			}
			set
			{
				TINH_TRANG_XE previousValue = this._TINH_TRANG_XE.Entity;
				if (((previousValue != value) 
							|| (this._TINH_TRANG_XE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TINH_TRANG_XE.Entity = null;
						previousValue.XEs.Remove(this);
					}
					this._TINH_TRANG_XE.Entity = value;
					if ((value != null))
					{
						value.XEs.Add(this);
						this._TinhTrang = value.MaTinhTrangXe;
					}
					else
					{
						this._TinhTrang = default(Nullable<int>);
					}
					this.SendPropertyChanged("TINH_TRANG_XE");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.CHO_NGOI")]
	public partial class CHO_NGOI : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaChoNgoi;
		
		private System.Nullable<int> _ViTri;
		
		private EntitySet<DAT_CHO> _DAT_CHOs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaChoNgoiChanging(int value);
    partial void OnMaChoNgoiChanged();
    partial void OnViTriChanging(System.Nullable<int> value);
    partial void OnViTriChanged();
    #endregion
		
		public CHO_NGOI()
		{
			this._DAT_CHOs = new EntitySet<DAT_CHO>(new Action<DAT_CHO>(this.attach_DAT_CHOs), new Action<DAT_CHO>(this.detach_DAT_CHOs));
			OnCreated();
		}
		
		[Column(Storage="_MaChoNgoi", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaChoNgoi
		{
			get
			{
				return this._MaChoNgoi;
			}
			set
			{
				if ((this._MaChoNgoi != value))
				{
					this.OnMaChoNgoiChanging(value);
					this.SendPropertyChanging();
					this._MaChoNgoi = value;
					this.SendPropertyChanged("MaChoNgoi");
					this.OnMaChoNgoiChanged();
				}
			}
		}
		
		[Column(Storage="_ViTri", DbType="Int")]
		public System.Nullable<int> ViTri
		{
			get
			{
				return this._ViTri;
			}
			set
			{
				if ((this._ViTri != value))
				{
					this.OnViTriChanging(value);
					this.SendPropertyChanging();
					this._ViTri = value;
					this.SendPropertyChanged("ViTri");
					this.OnViTriChanged();
				}
			}
		}
		
		[Association(Name="CHO_NGOI_DAT_CHO", Storage="_DAT_CHOs", ThisKey="MaChoNgoi", OtherKey="MaChoNgoi")]
		public EntitySet<DAT_CHO> DAT_CHOs
		{
			get
			{
				return this._DAT_CHOs;
			}
			set
			{
				this._DAT_CHOs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DAT_CHOs(DAT_CHO entity)
		{
			this.SendPropertyChanging();
			entity.CHO_NGOI = this;
		}
		
		private void detach_DAT_CHOs(DAT_CHO entity)
		{
			this.SendPropertyChanging();
			entity.CHO_NGOI = null;
		}
	}
	
	[Table(Name="dbo.CHUC_NANG")]
	public partial class CHUC_NANG : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaChucNang;
		
		private string _TenChucNang;
		
		private EntitySet<PHAN_QUYEN> _PHAN_QUYENs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaChucNangChanging(int value);
    partial void OnMaChucNangChanged();
    partial void OnTenChucNangChanging(string value);
    partial void OnTenChucNangChanged();
    #endregion
		
		public CHUC_NANG()
		{
			this._PHAN_QUYENs = new EntitySet<PHAN_QUYEN>(new Action<PHAN_QUYEN>(this.attach_PHAN_QUYENs), new Action<PHAN_QUYEN>(this.detach_PHAN_QUYENs));
			OnCreated();
		}
		
		[Column(Storage="_MaChucNang", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaChucNang
		{
			get
			{
				return this._MaChucNang;
			}
			set
			{
				if ((this._MaChucNang != value))
				{
					this.OnMaChucNangChanging(value);
					this.SendPropertyChanging();
					this._MaChucNang = value;
					this.SendPropertyChanged("MaChucNang");
					this.OnMaChucNangChanged();
				}
			}
		}
		
		[Column(Storage="_TenChucNang", DbType="NVarChar(50)")]
		public string TenChucNang
		{
			get
			{
				return this._TenChucNang;
			}
			set
			{
				if ((this._TenChucNang != value))
				{
					this.OnTenChucNangChanging(value);
					this.SendPropertyChanging();
					this._TenChucNang = value;
					this.SendPropertyChanged("TenChucNang");
					this.OnTenChucNangChanged();
				}
			}
		}
		
		[Association(Name="CHUC_NANG_PHAN_QUYEN", Storage="_PHAN_QUYENs", ThisKey="MaChucNang", OtherKey="MaChucNang")]
		public EntitySet<PHAN_QUYEN> PHAN_QUYENs
		{
			get
			{
				return this._PHAN_QUYENs;
			}
			set
			{
				this._PHAN_QUYENs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PHAN_QUYENs(PHAN_QUYEN entity)
		{
			this.SendPropertyChanging();
			entity.CHUC_NANG = this;
		}
		
		private void detach_PHAN_QUYENs(PHAN_QUYEN entity)
		{
			this.SendPropertyChanging();
			entity.CHUC_NANG = null;
		}
	}
	
	[Table(Name="dbo.CHUYEN_XE")]
	public partial class CHUYEN_XE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaChuyenXe;
		
		private System.Nullable<System.DateTime> _KhoiHanh;
		
		private System.Nullable<System.DateTime> _DuKienDen;
		
		private System.Nullable<int> _MaTuyenXe;
		
		private System.Nullable<int> _MaTaiXe;
		
		private System.Nullable<int> _TinhTrang;
		
		private System.Nullable<System.DateTime> _ThoiGianDenTram;
		
		private System.Nullable<int> _LuongTaiXe;
		
		private System.Nullable<int> _GiaVe;
		
		private EntitySet<DAT_CHO> _DAT_CHOs;
		
		private EntitySet<PHAN_HOI> _PHAN_HOIs;
		
		private EntityRef<NHAN_VIEN> _NHAN_VIEN;
		
		private EntityRef<TUYEN_XE> _TUYEN_XE;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaChuyenXeChanging(int value);
    partial void OnMaChuyenXeChanged();
    partial void OnKhoiHanhChanging(System.Nullable<System.DateTime> value);
    partial void OnKhoiHanhChanged();
    partial void OnDuKienDenChanging(System.Nullable<System.DateTime> value);
    partial void OnDuKienDenChanged();
    partial void OnMaTuyenXeChanging(System.Nullable<int> value);
    partial void OnMaTuyenXeChanged();
    partial void OnMaTaiXeChanging(System.Nullable<int> value);
    partial void OnMaTaiXeChanged();
    partial void OnTinhTrangChanging(System.Nullable<int> value);
    partial void OnTinhTrangChanged();
    partial void OnThoiGianDenTramChanging(System.Nullable<System.DateTime> value);
    partial void OnThoiGianDenTramChanged();
    partial void OnLuongTaiXeChanging(System.Nullable<int> value);
    partial void OnLuongTaiXeChanged();
    partial void OnGiaVeChanging(System.Nullable<int> value);
    partial void OnGiaVeChanged();
    #endregion
		
		public CHUYEN_XE()
		{
			this._DAT_CHOs = new EntitySet<DAT_CHO>(new Action<DAT_CHO>(this.attach_DAT_CHOs), new Action<DAT_CHO>(this.detach_DAT_CHOs));
			this._PHAN_HOIs = new EntitySet<PHAN_HOI>(new Action<PHAN_HOI>(this.attach_PHAN_HOIs), new Action<PHAN_HOI>(this.detach_PHAN_HOIs));
			this._NHAN_VIEN = default(EntityRef<NHAN_VIEN>);
			this._TUYEN_XE = default(EntityRef<TUYEN_XE>);
			OnCreated();
		}
		
		[Column(Storage="_MaChuyenXe", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaChuyenXe
		{
			get
			{
				return this._MaChuyenXe;
			}
			set
			{
				if ((this._MaChuyenXe != value))
				{
					this.OnMaChuyenXeChanging(value);
					this.SendPropertyChanging();
					this._MaChuyenXe = value;
					this.SendPropertyChanged("MaChuyenXe");
					this.OnMaChuyenXeChanged();
				}
			}
		}
		
		[Column(Storage="_KhoiHanh", DbType="DateTime")]
		public System.Nullable<System.DateTime> KhoiHanh
		{
			get
			{
				return this._KhoiHanh;
			}
			set
			{
				if ((this._KhoiHanh != value))
				{
					this.OnKhoiHanhChanging(value);
					this.SendPropertyChanging();
					this._KhoiHanh = value;
					this.SendPropertyChanged("KhoiHanh");
					this.OnKhoiHanhChanged();
				}
			}
		}
		
		[Column(Storage="_DuKienDen", DbType="DateTime")]
		public System.Nullable<System.DateTime> DuKienDen
		{
			get
			{
				return this._DuKienDen;
			}
			set
			{
				if ((this._DuKienDen != value))
				{
					this.OnDuKienDenChanging(value);
					this.SendPropertyChanging();
					this._DuKienDen = value;
					this.SendPropertyChanged("DuKienDen");
					this.OnDuKienDenChanged();
				}
			}
		}
		
		[Column(Storage="_MaTuyenXe", DbType="Int")]
		public System.Nullable<int> MaTuyenXe
		{
			get
			{
				return this._MaTuyenXe;
			}
			set
			{
				if ((this._MaTuyenXe != value))
				{
					if (this._TUYEN_XE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaTuyenXeChanging(value);
					this.SendPropertyChanging();
					this._MaTuyenXe = value;
					this.SendPropertyChanged("MaTuyenXe");
					this.OnMaTuyenXeChanged();
				}
			}
		}
		
		[Column(Storage="_MaTaiXe", DbType="Int")]
		public System.Nullable<int> MaTaiXe
		{
			get
			{
				return this._MaTaiXe;
			}
			set
			{
				if ((this._MaTaiXe != value))
				{
					if (this._NHAN_VIEN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaTaiXeChanging(value);
					this.SendPropertyChanging();
					this._MaTaiXe = value;
					this.SendPropertyChanged("MaTaiXe");
					this.OnMaTaiXeChanged();
				}
			}
		}
		
		[Column(Storage="_TinhTrang", DbType="Int")]
		public System.Nullable<int> TinhTrang
		{
			get
			{
				return this._TinhTrang;
			}
			set
			{
				if ((this._TinhTrang != value))
				{
					this.OnTinhTrangChanging(value);
					this.SendPropertyChanging();
					this._TinhTrang = value;
					this.SendPropertyChanged("TinhTrang");
					this.OnTinhTrangChanged();
				}
			}
		}
		
		[Column(Storage="_ThoiGianDenTram", DbType="DateTime")]
		public System.Nullable<System.DateTime> ThoiGianDenTram
		{
			get
			{
				return this._ThoiGianDenTram;
			}
			set
			{
				if ((this._ThoiGianDenTram != value))
				{
					this.OnThoiGianDenTramChanging(value);
					this.SendPropertyChanging();
					this._ThoiGianDenTram = value;
					this.SendPropertyChanged("ThoiGianDenTram");
					this.OnThoiGianDenTramChanged();
				}
			}
		}
		
		[Column(Storage="_LuongTaiXe", DbType="Int")]
		public System.Nullable<int> LuongTaiXe
		{
			get
			{
				return this._LuongTaiXe;
			}
			set
			{
				if ((this._LuongTaiXe != value))
				{
					this.OnLuongTaiXeChanging(value);
					this.SendPropertyChanging();
					this._LuongTaiXe = value;
					this.SendPropertyChanged("LuongTaiXe");
					this.OnLuongTaiXeChanged();
				}
			}
		}
		
		[Column(Storage="_GiaVe", DbType="Int")]
		public System.Nullable<int> GiaVe
		{
			get
			{
				return this._GiaVe;
			}
			set
			{
				if ((this._GiaVe != value))
				{
					this.OnGiaVeChanging(value);
					this.SendPropertyChanging();
					this._GiaVe = value;
					this.SendPropertyChanged("GiaVe");
					this.OnGiaVeChanged();
				}
			}
		}
		
		[Association(Name="CHUYEN_XE_DAT_CHO", Storage="_DAT_CHOs", ThisKey="MaChuyenXe", OtherKey="MaChuyenXe")]
		public EntitySet<DAT_CHO> DAT_CHOs
		{
			get
			{
				return this._DAT_CHOs;
			}
			set
			{
				this._DAT_CHOs.Assign(value);
			}
		}
		
		[Association(Name="CHUYEN_XE_PHAN_HOI", Storage="_PHAN_HOIs", ThisKey="MaChuyenXe", OtherKey="MaChuyen")]
		public EntitySet<PHAN_HOI> PHAN_HOIs
		{
			get
			{
				return this._PHAN_HOIs;
			}
			set
			{
				this._PHAN_HOIs.Assign(value);
			}
		}
		
		[Association(Name="NHAN_VIEN_CHUYEN_XE", Storage="_NHAN_VIEN", ThisKey="MaTaiXe", OtherKey="MaNhanVien", IsForeignKey=true)]
		public NHAN_VIEN NHAN_VIEN
		{
			get
			{
				return this._NHAN_VIEN.Entity;
			}
			set
			{
				NHAN_VIEN previousValue = this._NHAN_VIEN.Entity;
				if (((previousValue != value) 
							|| (this._NHAN_VIEN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NHAN_VIEN.Entity = null;
						previousValue.CHUYEN_XEs.Remove(this);
					}
					this._NHAN_VIEN.Entity = value;
					if ((value != null))
					{
						value.CHUYEN_XEs.Add(this);
						this._MaTaiXe = value.MaNhanVien;
					}
					else
					{
						this._MaTaiXe = default(Nullable<int>);
					}
					this.SendPropertyChanged("NHAN_VIEN");
				}
			}
		}
		
		[Association(Name="TUYEN_XE_CHUYEN_XE", Storage="_TUYEN_XE", ThisKey="MaTuyenXe", OtherKey="MaTuyenXe", IsForeignKey=true)]
		public TUYEN_XE TUYEN_XE
		{
			get
			{
				return this._TUYEN_XE.Entity;
			}
			set
			{
				TUYEN_XE previousValue = this._TUYEN_XE.Entity;
				if (((previousValue != value) 
							|| (this._TUYEN_XE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TUYEN_XE.Entity = null;
						previousValue.CHUYEN_XEs.Remove(this);
					}
					this._TUYEN_XE.Entity = value;
					if ((value != null))
					{
						value.CHUYEN_XEs.Add(this);
						this._MaTuyenXe = value.MaTuyenXe;
					}
					else
					{
						this._MaTuyenXe = default(Nullable<int>);
					}
					this.SendPropertyChanged("TUYEN_XE");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DAT_CHOs(DAT_CHO entity)
		{
			this.SendPropertyChanging();
			entity.CHUYEN_XE = this;
		}
		
		private void detach_DAT_CHOs(DAT_CHO entity)
		{
			this.SendPropertyChanging();
			entity.CHUYEN_XE = null;
		}
		
		private void attach_PHAN_HOIs(PHAN_HOI entity)
		{
			this.SendPropertyChanging();
			entity.CHUYEN_XE = this;
		}
		
		private void detach_PHAN_HOIs(PHAN_HOI entity)
		{
			this.SendPropertyChanging();
			entity.CHUYEN_XE = null;
		}
	}
	
	[Table(Name="dbo.DAT_CHO")]
	public partial class DAT_CHO : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaDatCho;
		
		private System.Nullable<int> _MaChoNgoi;
		
		private System.Nullable<int> _MaChuyenXe;
		
		private System.Nullable<int> _TinhTrang;
		
		private EntityRef<CHO_NGOI> _CHO_NGOI;
		
		private EntityRef<CHUYEN_XE> _CHUYEN_XE;
		
		private EntityRef<TINH_TRANG_DAT_CHO> _TINH_TRANG_DAT_CHO;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaDatChoChanging(int value);
    partial void OnMaDatChoChanged();
    partial void OnMaChoNgoiChanging(System.Nullable<int> value);
    partial void OnMaChoNgoiChanged();
    partial void OnMaChuyenXeChanging(System.Nullable<int> value);
    partial void OnMaChuyenXeChanged();
    partial void OnTinhTrangChanging(System.Nullable<int> value);
    partial void OnTinhTrangChanged();
    #endregion
		
		public DAT_CHO()
		{
			this._CHO_NGOI = default(EntityRef<CHO_NGOI>);
			this._CHUYEN_XE = default(EntityRef<CHUYEN_XE>);
			this._TINH_TRANG_DAT_CHO = default(EntityRef<TINH_TRANG_DAT_CHO>);
			OnCreated();
		}
		
		[Column(Storage="_MaDatCho", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaDatCho
		{
			get
			{
				return this._MaDatCho;
			}
			set
			{
				if ((this._MaDatCho != value))
				{
					this.OnMaDatChoChanging(value);
					this.SendPropertyChanging();
					this._MaDatCho = value;
					this.SendPropertyChanged("MaDatCho");
					this.OnMaDatChoChanged();
				}
			}
		}
		
		[Column(Storage="_MaChoNgoi", DbType="Int")]
		public System.Nullable<int> MaChoNgoi
		{
			get
			{
				return this._MaChoNgoi;
			}
			set
			{
				if ((this._MaChoNgoi != value))
				{
					if (this._CHO_NGOI.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaChoNgoiChanging(value);
					this.SendPropertyChanging();
					this._MaChoNgoi = value;
					this.SendPropertyChanged("MaChoNgoi");
					this.OnMaChoNgoiChanged();
				}
			}
		}
		
		[Column(Storage="_MaChuyenXe", DbType="Int")]
		public System.Nullable<int> MaChuyenXe
		{
			get
			{
				return this._MaChuyenXe;
			}
			set
			{
				if ((this._MaChuyenXe != value))
				{
					if (this._CHUYEN_XE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaChuyenXeChanging(value);
					this.SendPropertyChanging();
					this._MaChuyenXe = value;
					this.SendPropertyChanged("MaChuyenXe");
					this.OnMaChuyenXeChanged();
				}
			}
		}
		
		[Column(Storage="_TinhTrang", DbType="Int")]
		public System.Nullable<int> TinhTrang
		{
			get
			{
				return this._TinhTrang;
			}
			set
			{
				if ((this._TinhTrang != value))
				{
					if (this._TINH_TRANG_DAT_CHO.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTinhTrangChanging(value);
					this.SendPropertyChanging();
					this._TinhTrang = value;
					this.SendPropertyChanged("TinhTrang");
					this.OnTinhTrangChanged();
				}
			}
		}
		
		[Association(Name="CHO_NGOI_DAT_CHO", Storage="_CHO_NGOI", ThisKey="MaChoNgoi", OtherKey="MaChoNgoi", IsForeignKey=true)]
		public CHO_NGOI CHO_NGOI
		{
			get
			{
				return this._CHO_NGOI.Entity;
			}
			set
			{
				CHO_NGOI previousValue = this._CHO_NGOI.Entity;
				if (((previousValue != value) 
							|| (this._CHO_NGOI.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CHO_NGOI.Entity = null;
						previousValue.DAT_CHOs.Remove(this);
					}
					this._CHO_NGOI.Entity = value;
					if ((value != null))
					{
						value.DAT_CHOs.Add(this);
						this._MaChoNgoi = value.MaChoNgoi;
					}
					else
					{
						this._MaChoNgoi = default(Nullable<int>);
					}
					this.SendPropertyChanged("CHO_NGOI");
				}
			}
		}
		
		[Association(Name="CHUYEN_XE_DAT_CHO", Storage="_CHUYEN_XE", ThisKey="MaChuyenXe", OtherKey="MaChuyenXe", IsForeignKey=true)]
		public CHUYEN_XE CHUYEN_XE
		{
			get
			{
				return this._CHUYEN_XE.Entity;
			}
			set
			{
				CHUYEN_XE previousValue = this._CHUYEN_XE.Entity;
				if (((previousValue != value) 
							|| (this._CHUYEN_XE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CHUYEN_XE.Entity = null;
						previousValue.DAT_CHOs.Remove(this);
					}
					this._CHUYEN_XE.Entity = value;
					if ((value != null))
					{
						value.DAT_CHOs.Add(this);
						this._MaChuyenXe = value.MaChuyenXe;
					}
					else
					{
						this._MaChuyenXe = default(Nullable<int>);
					}
					this.SendPropertyChanged("CHUYEN_XE");
				}
			}
		}
		
		[Association(Name="TINH_TRANG_DAT_CHO_DAT_CHO", Storage="_TINH_TRANG_DAT_CHO", ThisKey="TinhTrang", OtherKey="MaTinhTrangDatCho", IsForeignKey=true)]
		public TINH_TRANG_DAT_CHO TINH_TRANG_DAT_CHO
		{
			get
			{
				return this._TINH_TRANG_DAT_CHO.Entity;
			}
			set
			{
				TINH_TRANG_DAT_CHO previousValue = this._TINH_TRANG_DAT_CHO.Entity;
				if (((previousValue != value) 
							|| (this._TINH_TRANG_DAT_CHO.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TINH_TRANG_DAT_CHO.Entity = null;
						previousValue.DAT_CHOs.Remove(this);
					}
					this._TINH_TRANG_DAT_CHO.Entity = value;
					if ((value != null))
					{
						value.DAT_CHOs.Add(this);
						this._TinhTrang = value.MaTinhTrangDatCho;
					}
					else
					{
						this._TinhTrang = default(Nullable<int>);
					}
					this.SendPropertyChanged("TINH_TRANG_DAT_CHO");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.LOAI_NHAN_VIEN")]
	public partial class LOAI_NHAN_VIEN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaLoaiNhanVien;
		
		private string _TenLoai;
		
		private EntitySet<NHAN_VIEN> _NHAN_VIENs;
		
		private EntitySet<PHAN_QUYEN> _PHAN_QUYENs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaLoaiNhanVienChanging(int value);
    partial void OnMaLoaiNhanVienChanged();
    partial void OnTenLoaiChanging(string value);
    partial void OnTenLoaiChanged();
    #endregion
		
		public LOAI_NHAN_VIEN()
		{
			this._NHAN_VIENs = new EntitySet<NHAN_VIEN>(new Action<NHAN_VIEN>(this.attach_NHAN_VIENs), new Action<NHAN_VIEN>(this.detach_NHAN_VIENs));
			this._PHAN_QUYENs = new EntitySet<PHAN_QUYEN>(new Action<PHAN_QUYEN>(this.attach_PHAN_QUYENs), new Action<PHAN_QUYEN>(this.detach_PHAN_QUYENs));
			OnCreated();
		}
		
		[Column(Storage="_MaLoaiNhanVien", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaLoaiNhanVien
		{
			get
			{
				return this._MaLoaiNhanVien;
			}
			set
			{
				if ((this._MaLoaiNhanVien != value))
				{
					this.OnMaLoaiNhanVienChanging(value);
					this.SendPropertyChanging();
					this._MaLoaiNhanVien = value;
					this.SendPropertyChanged("MaLoaiNhanVien");
					this.OnMaLoaiNhanVienChanged();
				}
			}
		}
		
		[Column(Storage="_TenLoai", DbType="NVarChar(50)")]
		public string TenLoai
		{
			get
			{
				return this._TenLoai;
			}
			set
			{
				if ((this._TenLoai != value))
				{
					this.OnTenLoaiChanging(value);
					this.SendPropertyChanging();
					this._TenLoai = value;
					this.SendPropertyChanged("TenLoai");
					this.OnTenLoaiChanged();
				}
			}
		}
		
		[Association(Name="LOAI_NHAN_VIEN_NHAN_VIEN", Storage="_NHAN_VIENs", ThisKey="MaLoaiNhanVien", OtherKey="LoaiNhanVien")]
		public EntitySet<NHAN_VIEN> NHAN_VIENs
		{
			get
			{
				return this._NHAN_VIENs;
			}
			set
			{
				this._NHAN_VIENs.Assign(value);
			}
		}
		
		[Association(Name="LOAI_NHAN_VIEN_PHAN_QUYEN", Storage="_PHAN_QUYENs", ThisKey="MaLoaiNhanVien", OtherKey="MaLoaiNhanVien")]
		public EntitySet<PHAN_QUYEN> PHAN_QUYENs
		{
			get
			{
				return this._PHAN_QUYENs;
			}
			set
			{
				this._PHAN_QUYENs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_NHAN_VIENs(NHAN_VIEN entity)
		{
			this.SendPropertyChanging();
			entity.LOAI_NHAN_VIEN = this;
		}
		
		private void detach_NHAN_VIENs(NHAN_VIEN entity)
		{
			this.SendPropertyChanging();
			entity.LOAI_NHAN_VIEN = null;
		}
		
		private void attach_PHAN_QUYENs(PHAN_QUYEN entity)
		{
			this.SendPropertyChanging();
			entity.LOAI_NHAN_VIEN = this;
		}
		
		private void detach_PHAN_QUYENs(PHAN_QUYEN entity)
		{
			this.SendPropertyChanging();
			entity.LOAI_NHAN_VIEN = null;
		}
	}
	
	[Table(Name="dbo.LOAI_XE")]
	public partial class LOAI_XE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaLoaixe;
		
		private string _HinhAnh;
		
		private string _HangSanXuat;
		
		private EntitySet<XE> _XEs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaLoaixeChanging(int value);
    partial void OnMaLoaixeChanged();
    partial void OnHinhAnhChanging(string value);
    partial void OnHinhAnhChanged();
    partial void OnHangSanXuatChanging(string value);
    partial void OnHangSanXuatChanged();
    #endregion
		
		public LOAI_XE()
		{
			this._XEs = new EntitySet<XE>(new Action<XE>(this.attach_XEs), new Action<XE>(this.detach_XEs));
			OnCreated();
		}
		
		[Column(Storage="_MaLoaixe", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaLoaixe
		{
			get
			{
				return this._MaLoaixe;
			}
			set
			{
				if ((this._MaLoaixe != value))
				{
					this.OnMaLoaixeChanging(value);
					this.SendPropertyChanging();
					this._MaLoaixe = value;
					this.SendPropertyChanged("MaLoaixe");
					this.OnMaLoaixeChanged();
				}
			}
		}
		
		[Column(Storage="_HinhAnh", DbType="NVarChar(50)")]
		public string HinhAnh
		{
			get
			{
				return this._HinhAnh;
			}
			set
			{
				if ((this._HinhAnh != value))
				{
					this.OnHinhAnhChanging(value);
					this.SendPropertyChanging();
					this._HinhAnh = value;
					this.SendPropertyChanged("HinhAnh");
					this.OnHinhAnhChanged();
				}
			}
		}
		
		[Column(Storage="_HangSanXuat", DbType="NVarChar(50)")]
		public string HangSanXuat
		{
			get
			{
				return this._HangSanXuat;
			}
			set
			{
				if ((this._HangSanXuat != value))
				{
					this.OnHangSanXuatChanging(value);
					this.SendPropertyChanging();
					this._HangSanXuat = value;
					this.SendPropertyChanged("HangSanXuat");
					this.OnHangSanXuatChanged();
				}
			}
		}
		
		[Association(Name="LOAI_XE_XE", Storage="_XEs", ThisKey="MaLoaixe", OtherKey="MaLoaiXe")]
		public EntitySet<XE> XEs
		{
			get
			{
				return this._XEs;
			}
			set
			{
				this._XEs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_XEs(XE entity)
		{
			this.SendPropertyChanging();
			entity.LOAI_XE = this;
		}
		
		private void detach_XEs(XE entity)
		{
			this.SendPropertyChanging();
			entity.LOAI_XE = null;
		}
	}
	
	[Table(Name="dbo.NHAN_VIEN")]
	public partial class NHAN_VIEN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaNhanVien;
		
		private string _HoTen;
		
		private string _DienThoai;
		
		private string _DiaChi;
		
		private System.Nullable<int> _LoaiNhanVien;
		
		private System.Nullable<double> _LuongTrongThang;
		
		private EntitySet<XE> _XEs;
		
		private EntitySet<CHUYEN_XE> _CHUYEN_XEs;
		
		private EntitySet<PHAN_HOI> _PHAN_HOIs;
		
		private EntitySet<TAI_KHOAN> _TAI_KHOANs;
		
		private EntitySet<TIN_TUC> _TIN_TUCs;
		
		private EntitySet<TRAM_XE> _TRAM_XEs;
		
		private EntityRef<LOAI_NHAN_VIEN> _LOAI_NHAN_VIEN;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaNhanVienChanging(int value);
    partial void OnMaNhanVienChanged();
    partial void OnHoTenChanging(string value);
    partial void OnHoTenChanged();
    partial void OnDienThoaiChanging(string value);
    partial void OnDienThoaiChanged();
    partial void OnDiaChiChanging(string value);
    partial void OnDiaChiChanged();
    partial void OnLoaiNhanVienChanging(System.Nullable<int> value);
    partial void OnLoaiNhanVienChanged();
    partial void OnLuongTrongThangChanging(System.Nullable<double> value);
    partial void OnLuongTrongThangChanged();
    #endregion
		
		public NHAN_VIEN()
		{
			this._XEs = new EntitySet<XE>(new Action<XE>(this.attach_XEs), new Action<XE>(this.detach_XEs));
			this._CHUYEN_XEs = new EntitySet<CHUYEN_XE>(new Action<CHUYEN_XE>(this.attach_CHUYEN_XEs), new Action<CHUYEN_XE>(this.detach_CHUYEN_XEs));
			this._PHAN_HOIs = new EntitySet<PHAN_HOI>(new Action<PHAN_HOI>(this.attach_PHAN_HOIs), new Action<PHAN_HOI>(this.detach_PHAN_HOIs));
			this._TAI_KHOANs = new EntitySet<TAI_KHOAN>(new Action<TAI_KHOAN>(this.attach_TAI_KHOANs), new Action<TAI_KHOAN>(this.detach_TAI_KHOANs));
			this._TIN_TUCs = new EntitySet<TIN_TUC>(new Action<TIN_TUC>(this.attach_TIN_TUCs), new Action<TIN_TUC>(this.detach_TIN_TUCs));
			this._TRAM_XEs = new EntitySet<TRAM_XE>(new Action<TRAM_XE>(this.attach_TRAM_XEs), new Action<TRAM_XE>(this.detach_TRAM_XEs));
			this._LOAI_NHAN_VIEN = default(EntityRef<LOAI_NHAN_VIEN>);
			OnCreated();
		}
		
		[Column(Storage="_MaNhanVien", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaNhanVien
		{
			get
			{
				return this._MaNhanVien;
			}
			set
			{
				if ((this._MaNhanVien != value))
				{
					this.OnMaNhanVienChanging(value);
					this.SendPropertyChanging();
					this._MaNhanVien = value;
					this.SendPropertyChanged("MaNhanVien");
					this.OnMaNhanVienChanged();
				}
			}
		}
		
		[Column(Storage="_HoTen", DbType="NVarChar(50)")]
		public string HoTen
		{
			get
			{
				return this._HoTen;
			}
			set
			{
				if ((this._HoTen != value))
				{
					this.OnHoTenChanging(value);
					this.SendPropertyChanging();
					this._HoTen = value;
					this.SendPropertyChanged("HoTen");
					this.OnHoTenChanged();
				}
			}
		}
		
		[Column(Storage="_DienThoai", DbType="NVarChar(50)")]
		public string DienThoai
		{
			get
			{
				return this._DienThoai;
			}
			set
			{
				if ((this._DienThoai != value))
				{
					this.OnDienThoaiChanging(value);
					this.SendPropertyChanging();
					this._DienThoai = value;
					this.SendPropertyChanged("DienThoai");
					this.OnDienThoaiChanged();
				}
			}
		}
		
		[Column(Storage="_DiaChi", DbType="NVarChar(50)")]
		public string DiaChi
		{
			get
			{
				return this._DiaChi;
			}
			set
			{
				if ((this._DiaChi != value))
				{
					this.OnDiaChiChanging(value);
					this.SendPropertyChanging();
					this._DiaChi = value;
					this.SendPropertyChanged("DiaChi");
					this.OnDiaChiChanged();
				}
			}
		}
		
		[Column(Storage="_LoaiNhanVien", DbType="Int")]
		public System.Nullable<int> LoaiNhanVien
		{
			get
			{
				return this._LoaiNhanVien;
			}
			set
			{
				if ((this._LoaiNhanVien != value))
				{
					if (this._LOAI_NHAN_VIEN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLoaiNhanVienChanging(value);
					this.SendPropertyChanging();
					this._LoaiNhanVien = value;
					this.SendPropertyChanged("LoaiNhanVien");
					this.OnLoaiNhanVienChanged();
				}
			}
		}
		
		[Column(Storage="_LuongTrongThang", DbType="Float")]
		public System.Nullable<double> LuongTrongThang
		{
			get
			{
				return this._LuongTrongThang;
			}
			set
			{
				if ((this._LuongTrongThang != value))
				{
					this.OnLuongTrongThangChanging(value);
					this.SendPropertyChanging();
					this._LuongTrongThang = value;
					this.SendPropertyChanged("LuongTrongThang");
					this.OnLuongTrongThangChanged();
				}
			}
		}
		
		[Association(Name="NHAN_VIEN_XE", Storage="_XEs", ThisKey="MaNhanVien", OtherKey="MaTaiXe")]
		public EntitySet<XE> XEs
		{
			get
			{
				return this._XEs;
			}
			set
			{
				this._XEs.Assign(value);
			}
		}
		
		[Association(Name="NHAN_VIEN_CHUYEN_XE", Storage="_CHUYEN_XEs", ThisKey="MaNhanVien", OtherKey="MaTaiXe")]
		public EntitySet<CHUYEN_XE> CHUYEN_XEs
		{
			get
			{
				return this._CHUYEN_XEs;
			}
			set
			{
				this._CHUYEN_XEs.Assign(value);
			}
		}
		
		[Association(Name="NHAN_VIEN_PHAN_HOI", Storage="_PHAN_HOIs", ThisKey="MaNhanVien", OtherKey="MaNhanVien")]
		public EntitySet<PHAN_HOI> PHAN_HOIs
		{
			get
			{
				return this._PHAN_HOIs;
			}
			set
			{
				this._PHAN_HOIs.Assign(value);
			}
		}
		
		[Association(Name="NHAN_VIEN_TAI_KHOAN", Storage="_TAI_KHOANs", ThisKey="MaNhanVien", OtherKey="MaNhanVien")]
		public EntitySet<TAI_KHOAN> TAI_KHOANs
		{
			get
			{
				return this._TAI_KHOANs;
			}
			set
			{
				this._TAI_KHOANs.Assign(value);
			}
		}
		
		[Association(Name="NHAN_VIEN_TIN_TUC", Storage="_TIN_TUCs", ThisKey="MaNhanVien", OtherKey="MaAdminDuyet")]
		public EntitySet<TIN_TUC> TIN_TUCs
		{
			get
			{
				return this._TIN_TUCs;
			}
			set
			{
				this._TIN_TUCs.Assign(value);
			}
		}
		
		[Association(Name="NHAN_VIEN_TRAM_XE", Storage="_TRAM_XEs", ThisKey="MaNhanVien", OtherKey="MaTruongTram")]
		public EntitySet<TRAM_XE> TRAM_XEs
		{
			get
			{
				return this._TRAM_XEs;
			}
			set
			{
				this._TRAM_XEs.Assign(value);
			}
		}
		
		[Association(Name="LOAI_NHAN_VIEN_NHAN_VIEN", Storage="_LOAI_NHAN_VIEN", ThisKey="LoaiNhanVien", OtherKey="MaLoaiNhanVien", IsForeignKey=true)]
		public LOAI_NHAN_VIEN LOAI_NHAN_VIEN
		{
			get
			{
				return this._LOAI_NHAN_VIEN.Entity;
			}
			set
			{
				LOAI_NHAN_VIEN previousValue = this._LOAI_NHAN_VIEN.Entity;
				if (((previousValue != value) 
							|| (this._LOAI_NHAN_VIEN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LOAI_NHAN_VIEN.Entity = null;
						previousValue.NHAN_VIENs.Remove(this);
					}
					this._LOAI_NHAN_VIEN.Entity = value;
					if ((value != null))
					{
						value.NHAN_VIENs.Add(this);
						this._LoaiNhanVien = value.MaLoaiNhanVien;
					}
					else
					{
						this._LoaiNhanVien = default(Nullable<int>);
					}
					this.SendPropertyChanged("LOAI_NHAN_VIEN");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_XEs(XE entity)
		{
			this.SendPropertyChanging();
			entity.NHAN_VIEN = this;
		}
		
		private void detach_XEs(XE entity)
		{
			this.SendPropertyChanging();
			entity.NHAN_VIEN = null;
		}
		
		private void attach_CHUYEN_XEs(CHUYEN_XE entity)
		{
			this.SendPropertyChanging();
			entity.NHAN_VIEN = this;
		}
		
		private void detach_CHUYEN_XEs(CHUYEN_XE entity)
		{
			this.SendPropertyChanging();
			entity.NHAN_VIEN = null;
		}
		
		private void attach_PHAN_HOIs(PHAN_HOI entity)
		{
			this.SendPropertyChanging();
			entity.NHAN_VIEN = this;
		}
		
		private void detach_PHAN_HOIs(PHAN_HOI entity)
		{
			this.SendPropertyChanging();
			entity.NHAN_VIEN = null;
		}
		
		private void attach_TAI_KHOANs(TAI_KHOAN entity)
		{
			this.SendPropertyChanging();
			entity.NHAN_VIEN = this;
		}
		
		private void detach_TAI_KHOANs(TAI_KHOAN entity)
		{
			this.SendPropertyChanging();
			entity.NHAN_VIEN = null;
		}
		
		private void attach_TIN_TUCs(TIN_TUC entity)
		{
			this.SendPropertyChanging();
			entity.NHAN_VIEN = this;
		}
		
		private void detach_TIN_TUCs(TIN_TUC entity)
		{
			this.SendPropertyChanging();
			entity.NHAN_VIEN = null;
		}
		
		private void attach_TRAM_XEs(TRAM_XE entity)
		{
			this.SendPropertyChanging();
			entity.NHAN_VIEN = this;
		}
		
		private void detach_TRAM_XEs(TRAM_XE entity)
		{
			this.SendPropertyChanging();
			entity.NHAN_VIEN = null;
		}
	}
	
	[Table(Name="dbo.PHAN_HOI")]
	public partial class PHAN_HOI : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaPhanHoi;
		
		private System.Nullable<int> _MaChuyen;
		
		private System.Nullable<int> _MaPhanHoiKhach;
		
		private System.Nullable<int> _MaNhanVien;
		
		private EntityRef<CHUYEN_XE> _CHUYEN_XE;
		
		private EntityRef<NHAN_VIEN> _NHAN_VIEN;
		
		private EntityRef<PHAN_HOI_KHACH_HANG> _PHAN_HOI_KHACH_HANG;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaPhanHoiChanging(int value);
    partial void OnMaPhanHoiChanged();
    partial void OnMaChuyenChanging(System.Nullable<int> value);
    partial void OnMaChuyenChanged();
    partial void OnMaPhanHoiKhachChanging(System.Nullable<int> value);
    partial void OnMaPhanHoiKhachChanged();
    partial void OnMaNhanVienChanging(System.Nullable<int> value);
    partial void OnMaNhanVienChanged();
    #endregion
		
		public PHAN_HOI()
		{
			this._CHUYEN_XE = default(EntityRef<CHUYEN_XE>);
			this._NHAN_VIEN = default(EntityRef<NHAN_VIEN>);
			this._PHAN_HOI_KHACH_HANG = default(EntityRef<PHAN_HOI_KHACH_HANG>);
			OnCreated();
		}
		
		[Column(Storage="_MaPhanHoi", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaPhanHoi
		{
			get
			{
				return this._MaPhanHoi;
			}
			set
			{
				if ((this._MaPhanHoi != value))
				{
					this.OnMaPhanHoiChanging(value);
					this.SendPropertyChanging();
					this._MaPhanHoi = value;
					this.SendPropertyChanged("MaPhanHoi");
					this.OnMaPhanHoiChanged();
				}
			}
		}
		
		[Column(Storage="_MaChuyen", DbType="Int")]
		public System.Nullable<int> MaChuyen
		{
			get
			{
				return this._MaChuyen;
			}
			set
			{
				if ((this._MaChuyen != value))
				{
					if (this._CHUYEN_XE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaChuyenChanging(value);
					this.SendPropertyChanging();
					this._MaChuyen = value;
					this.SendPropertyChanged("MaChuyen");
					this.OnMaChuyenChanged();
				}
			}
		}
		
		[Column(Storage="_MaPhanHoiKhach", DbType="Int")]
		public System.Nullable<int> MaPhanHoiKhach
		{
			get
			{
				return this._MaPhanHoiKhach;
			}
			set
			{
				if ((this._MaPhanHoiKhach != value))
				{
					if (this._PHAN_HOI_KHACH_HANG.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaPhanHoiKhachChanging(value);
					this.SendPropertyChanging();
					this._MaPhanHoiKhach = value;
					this.SendPropertyChanged("MaPhanHoiKhach");
					this.OnMaPhanHoiKhachChanged();
				}
			}
		}
		
		[Column(Storage="_MaNhanVien", DbType="Int")]
		public System.Nullable<int> MaNhanVien
		{
			get
			{
				return this._MaNhanVien;
			}
			set
			{
				if ((this._MaNhanVien != value))
				{
					if (this._NHAN_VIEN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaNhanVienChanging(value);
					this.SendPropertyChanging();
					this._MaNhanVien = value;
					this.SendPropertyChanged("MaNhanVien");
					this.OnMaNhanVienChanged();
				}
			}
		}
		
		[Association(Name="CHUYEN_XE_PHAN_HOI", Storage="_CHUYEN_XE", ThisKey="MaChuyen", OtherKey="MaChuyenXe", IsForeignKey=true)]
		public CHUYEN_XE CHUYEN_XE
		{
			get
			{
				return this._CHUYEN_XE.Entity;
			}
			set
			{
				CHUYEN_XE previousValue = this._CHUYEN_XE.Entity;
				if (((previousValue != value) 
							|| (this._CHUYEN_XE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CHUYEN_XE.Entity = null;
						previousValue.PHAN_HOIs.Remove(this);
					}
					this._CHUYEN_XE.Entity = value;
					if ((value != null))
					{
						value.PHAN_HOIs.Add(this);
						this._MaChuyen = value.MaChuyenXe;
					}
					else
					{
						this._MaChuyen = default(Nullable<int>);
					}
					this.SendPropertyChanged("CHUYEN_XE");
				}
			}
		}
		
		[Association(Name="NHAN_VIEN_PHAN_HOI", Storage="_NHAN_VIEN", ThisKey="MaNhanVien", OtherKey="MaNhanVien", IsForeignKey=true)]
		public NHAN_VIEN NHAN_VIEN
		{
			get
			{
				return this._NHAN_VIEN.Entity;
			}
			set
			{
				NHAN_VIEN previousValue = this._NHAN_VIEN.Entity;
				if (((previousValue != value) 
							|| (this._NHAN_VIEN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NHAN_VIEN.Entity = null;
						previousValue.PHAN_HOIs.Remove(this);
					}
					this._NHAN_VIEN.Entity = value;
					if ((value != null))
					{
						value.PHAN_HOIs.Add(this);
						this._MaNhanVien = value.MaNhanVien;
					}
					else
					{
						this._MaNhanVien = default(Nullable<int>);
					}
					this.SendPropertyChanged("NHAN_VIEN");
				}
			}
		}
		
		[Association(Name="PHAN_HOI_KHACH_HANG_PHAN_HOI", Storage="_PHAN_HOI_KHACH_HANG", ThisKey="MaPhanHoiKhach", OtherKey="MaPhanHoi", IsForeignKey=true)]
		public PHAN_HOI_KHACH_HANG PHAN_HOI_KHACH_HANG
		{
			get
			{
				return this._PHAN_HOI_KHACH_HANG.Entity;
			}
			set
			{
				PHAN_HOI_KHACH_HANG previousValue = this._PHAN_HOI_KHACH_HANG.Entity;
				if (((previousValue != value) 
							|| (this._PHAN_HOI_KHACH_HANG.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PHAN_HOI_KHACH_HANG.Entity = null;
						previousValue.PHAN_HOIs.Remove(this);
					}
					this._PHAN_HOI_KHACH_HANG.Entity = value;
					if ((value != null))
					{
						value.PHAN_HOIs.Add(this);
						this._MaPhanHoiKhach = value.MaPhanHoi;
					}
					else
					{
						this._MaPhanHoiKhach = default(Nullable<int>);
					}
					this.SendPropertyChanged("PHAN_HOI_KHACH_HANG");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.PHAN_HOI_KHACH_HANG")]
	public partial class PHAN_HOI_KHACH_HANG : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaPhanHoi;
		
		private string _NoiDung;
		
		private System.Nullable<System.DateTime> _NgayDang;
		
		private EntitySet<PHAN_HOI> _PHAN_HOIs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaPhanHoiChanging(int value);
    partial void OnMaPhanHoiChanged();
    partial void OnNoiDungChanging(string value);
    partial void OnNoiDungChanged();
    partial void OnNgayDangChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayDangChanged();
    #endregion
		
		public PHAN_HOI_KHACH_HANG()
		{
			this._PHAN_HOIs = new EntitySet<PHAN_HOI>(new Action<PHAN_HOI>(this.attach_PHAN_HOIs), new Action<PHAN_HOI>(this.detach_PHAN_HOIs));
			OnCreated();
		}
		
		[Column(Storage="_MaPhanHoi", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaPhanHoi
		{
			get
			{
				return this._MaPhanHoi;
			}
			set
			{
				if ((this._MaPhanHoi != value))
				{
					this.OnMaPhanHoiChanging(value);
					this.SendPropertyChanging();
					this._MaPhanHoi = value;
					this.SendPropertyChanged("MaPhanHoi");
					this.OnMaPhanHoiChanged();
				}
			}
		}
		
		[Column(Storage="_NoiDung", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string NoiDung
		{
			get
			{
				return this._NoiDung;
			}
			set
			{
				if ((this._NoiDung != value))
				{
					this.OnNoiDungChanging(value);
					this.SendPropertyChanging();
					this._NoiDung = value;
					this.SendPropertyChanged("NoiDung");
					this.OnNoiDungChanged();
				}
			}
		}
		
		[Column(Storage="_NgayDang", DbType="DateTime")]
		public System.Nullable<System.DateTime> NgayDang
		{
			get
			{
				return this._NgayDang;
			}
			set
			{
				if ((this._NgayDang != value))
				{
					this.OnNgayDangChanging(value);
					this.SendPropertyChanging();
					this._NgayDang = value;
					this.SendPropertyChanged("NgayDang");
					this.OnNgayDangChanged();
				}
			}
		}
		
		[Association(Name="PHAN_HOI_KHACH_HANG_PHAN_HOI", Storage="_PHAN_HOIs", ThisKey="MaPhanHoi", OtherKey="MaPhanHoiKhach")]
		public EntitySet<PHAN_HOI> PHAN_HOIs
		{
			get
			{
				return this._PHAN_HOIs;
			}
			set
			{
				this._PHAN_HOIs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PHAN_HOIs(PHAN_HOI entity)
		{
			this.SendPropertyChanging();
			entity.PHAN_HOI_KHACH_HANG = this;
		}
		
		private void detach_PHAN_HOIs(PHAN_HOI entity)
		{
			this.SendPropertyChanging();
			entity.PHAN_HOI_KHACH_HANG = null;
		}
	}
	
	[Table(Name="dbo.PHAN_QUYEN")]
	public partial class PHAN_QUYEN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaPhanQuyen;
		
		private System.Nullable<int> _MaLoaiNhanVien;
		
		private System.Nullable<int> _MaChucNang;
		
		private EntityRef<CHUC_NANG> _CHUC_NANG;
		
		private EntityRef<LOAI_NHAN_VIEN> _LOAI_NHAN_VIEN;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaPhanQuyenChanging(int value);
    partial void OnMaPhanQuyenChanged();
    partial void OnMaLoaiNhanVienChanging(System.Nullable<int> value);
    partial void OnMaLoaiNhanVienChanged();
    partial void OnMaChucNangChanging(System.Nullable<int> value);
    partial void OnMaChucNangChanged();
    #endregion
		
		public PHAN_QUYEN()
		{
			this._CHUC_NANG = default(EntityRef<CHUC_NANG>);
			this._LOAI_NHAN_VIEN = default(EntityRef<LOAI_NHAN_VIEN>);
			OnCreated();
		}
		
		[Column(Storage="_MaPhanQuyen", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaPhanQuyen
		{
			get
			{
				return this._MaPhanQuyen;
			}
			set
			{
				if ((this._MaPhanQuyen != value))
				{
					this.OnMaPhanQuyenChanging(value);
					this.SendPropertyChanging();
					this._MaPhanQuyen = value;
					this.SendPropertyChanged("MaPhanQuyen");
					this.OnMaPhanQuyenChanged();
				}
			}
		}
		
		[Column(Storage="_MaLoaiNhanVien", DbType="Int")]
		public System.Nullable<int> MaLoaiNhanVien
		{
			get
			{
				return this._MaLoaiNhanVien;
			}
			set
			{
				if ((this._MaLoaiNhanVien != value))
				{
					if (this._LOAI_NHAN_VIEN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaLoaiNhanVienChanging(value);
					this.SendPropertyChanging();
					this._MaLoaiNhanVien = value;
					this.SendPropertyChanged("MaLoaiNhanVien");
					this.OnMaLoaiNhanVienChanged();
				}
			}
		}
		
		[Column(Storage="_MaChucNang", DbType="Int")]
		public System.Nullable<int> MaChucNang
		{
			get
			{
				return this._MaChucNang;
			}
			set
			{
				if ((this._MaChucNang != value))
				{
					if (this._CHUC_NANG.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaChucNangChanging(value);
					this.SendPropertyChanging();
					this._MaChucNang = value;
					this.SendPropertyChanged("MaChucNang");
					this.OnMaChucNangChanged();
				}
			}
		}
		
		[Association(Name="CHUC_NANG_PHAN_QUYEN", Storage="_CHUC_NANG", ThisKey="MaChucNang", OtherKey="MaChucNang", IsForeignKey=true)]
		public CHUC_NANG CHUC_NANG
		{
			get
			{
				return this._CHUC_NANG.Entity;
			}
			set
			{
				CHUC_NANG previousValue = this._CHUC_NANG.Entity;
				if (((previousValue != value) 
							|| (this._CHUC_NANG.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CHUC_NANG.Entity = null;
						previousValue.PHAN_QUYENs.Remove(this);
					}
					this._CHUC_NANG.Entity = value;
					if ((value != null))
					{
						value.PHAN_QUYENs.Add(this);
						this._MaChucNang = value.MaChucNang;
					}
					else
					{
						this._MaChucNang = default(Nullable<int>);
					}
					this.SendPropertyChanged("CHUC_NANG");
				}
			}
		}
		
		[Association(Name="LOAI_NHAN_VIEN_PHAN_QUYEN", Storage="_LOAI_NHAN_VIEN", ThisKey="MaLoaiNhanVien", OtherKey="MaLoaiNhanVien", IsForeignKey=true)]
		public LOAI_NHAN_VIEN LOAI_NHAN_VIEN
		{
			get
			{
				return this._LOAI_NHAN_VIEN.Entity;
			}
			set
			{
				LOAI_NHAN_VIEN previousValue = this._LOAI_NHAN_VIEN.Entity;
				if (((previousValue != value) 
							|| (this._LOAI_NHAN_VIEN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LOAI_NHAN_VIEN.Entity = null;
						previousValue.PHAN_QUYENs.Remove(this);
					}
					this._LOAI_NHAN_VIEN.Entity = value;
					if ((value != null))
					{
						value.PHAN_QUYENs.Add(this);
						this._MaLoaiNhanVien = value.MaLoaiNhanVien;
					}
					else
					{
						this._MaLoaiNhanVien = default(Nullable<int>);
					}
					this.SendPropertyChanged("LOAI_NHAN_VIEN");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.TAI_KHOAN")]
	public partial class TAI_KHOAN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaTaiKhoan;
		
		private string _Username;
		
		private string _Password;
		
		private string _Email;
		
		private System.Nullable<System.DateTime> _NgayKichHoat;
		
		private System.Nullable<int> _MaNhanVien;
		
		private EntityRef<NHAN_VIEN> _NHAN_VIEN;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaTaiKhoanChanging(int value);
    partial void OnMaTaiKhoanChanged();
    partial void OnUsernameChanging(string value);
    partial void OnUsernameChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnNgayKichHoatChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayKichHoatChanged();
    partial void OnMaNhanVienChanging(System.Nullable<int> value);
    partial void OnMaNhanVienChanged();
    #endregion
		
		public TAI_KHOAN()
		{
			this._NHAN_VIEN = default(EntityRef<NHAN_VIEN>);
			OnCreated();
		}
		
		[Column(Storage="_MaTaiKhoan", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaTaiKhoan
		{
			get
			{
				return this._MaTaiKhoan;
			}
			set
			{
				if ((this._MaTaiKhoan != value))
				{
					this.OnMaTaiKhoanChanging(value);
					this.SendPropertyChanging();
					this._MaTaiKhoan = value;
					this.SendPropertyChanged("MaTaiKhoan");
					this.OnMaTaiKhoanChanged();
				}
			}
		}
		
		[Column(Storage="_Username", DbType="NVarChar(50)")]
		public string Username
		{
			get
			{
				return this._Username;
			}
			set
			{
				if ((this._Username != value))
				{
					this.OnUsernameChanging(value);
					this.SendPropertyChanging();
					this._Username = value;
					this.SendPropertyChanged("Username");
					this.OnUsernameChanged();
				}
			}
		}
		
		[Column(Storage="_Password", DbType="NVarChar(50)")]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[Column(Storage="_Email", DbType="NVarChar(50)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[Column(Storage="_NgayKichHoat", DbType="DateTime")]
		public System.Nullable<System.DateTime> NgayKichHoat
		{
			get
			{
				return this._NgayKichHoat;
			}
			set
			{
				if ((this._NgayKichHoat != value))
				{
					this.OnNgayKichHoatChanging(value);
					this.SendPropertyChanging();
					this._NgayKichHoat = value;
					this.SendPropertyChanged("NgayKichHoat");
					this.OnNgayKichHoatChanged();
				}
			}
		}
		
		[Column(Storage="_MaNhanVien", DbType="Int")]
		public System.Nullable<int> MaNhanVien
		{
			get
			{
				return this._MaNhanVien;
			}
			set
			{
				if ((this._MaNhanVien != value))
				{
					if (this._NHAN_VIEN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaNhanVienChanging(value);
					this.SendPropertyChanging();
					this._MaNhanVien = value;
					this.SendPropertyChanged("MaNhanVien");
					this.OnMaNhanVienChanged();
				}
			}
		}
		
		[Association(Name="NHAN_VIEN_TAI_KHOAN", Storage="_NHAN_VIEN", ThisKey="MaNhanVien", OtherKey="MaNhanVien", IsForeignKey=true)]
		public NHAN_VIEN NHAN_VIEN
		{
			get
			{
				return this._NHAN_VIEN.Entity;
			}
			set
			{
				NHAN_VIEN previousValue = this._NHAN_VIEN.Entity;
				if (((previousValue != value) 
							|| (this._NHAN_VIEN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NHAN_VIEN.Entity = null;
						previousValue.TAI_KHOANs.Remove(this);
					}
					this._NHAN_VIEN.Entity = value;
					if ((value != null))
					{
						value.TAI_KHOANs.Add(this);
						this._MaNhanVien = value.MaNhanVien;
					}
					else
					{
						this._MaNhanVien = default(Nullable<int>);
					}
					this.SendPropertyChanged("NHAN_VIEN");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.TIN_TUC")]
	public partial class TIN_TUC : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaTinTuc;
		
		private string _TieuDe;
		
		private string _HinhAnh;
		
		private string _TomTat;
		
		private string _NoiDung;
		
		private System.Nullable<System.DateTime> _NgayDang;
		
		private System.Nullable<int> _MaAdminDuyet;
		
		private EntityRef<NHAN_VIEN> _NHAN_VIEN;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaTinTucChanging(int value);
    partial void OnMaTinTucChanged();
    partial void OnTieuDeChanging(string value);
    partial void OnTieuDeChanged();
    partial void OnHinhAnhChanging(string value);
    partial void OnHinhAnhChanged();
    partial void OnTomTatChanging(string value);
    partial void OnTomTatChanged();
    partial void OnNoiDungChanging(string value);
    partial void OnNoiDungChanged();
    partial void OnNgayDangChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayDangChanged();
    partial void OnMaAdminDuyetChanging(System.Nullable<int> value);
    partial void OnMaAdminDuyetChanged();
    #endregion
		
		public TIN_TUC()
		{
			this._NHAN_VIEN = default(EntityRef<NHAN_VIEN>);
			OnCreated();
		}
		
		[Column(Storage="_MaTinTuc", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaTinTuc
		{
			get
			{
				return this._MaTinTuc;
			}
			set
			{
				if ((this._MaTinTuc != value))
				{
					this.OnMaTinTucChanging(value);
					this.SendPropertyChanging();
					this._MaTinTuc = value;
					this.SendPropertyChanged("MaTinTuc");
					this.OnMaTinTucChanged();
				}
			}
		}
		
		[Column(Storage="_TieuDe", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string TieuDe
		{
			get
			{
				return this._TieuDe;
			}
			set
			{
				if ((this._TieuDe != value))
				{
					this.OnTieuDeChanging(value);
					this.SendPropertyChanging();
					this._TieuDe = value;
					this.SendPropertyChanged("TieuDe");
					this.OnTieuDeChanged();
				}
			}
		}
		
		[Column(Storage="_HinhAnh", DbType="NVarChar(50)")]
		public string HinhAnh
		{
			get
			{
				return this._HinhAnh;
			}
			set
			{
				if ((this._HinhAnh != value))
				{
					this.OnHinhAnhChanging(value);
					this.SendPropertyChanging();
					this._HinhAnh = value;
					this.SendPropertyChanged("HinhAnh");
					this.OnHinhAnhChanged();
				}
			}
		}
		
		[Column(Storage="_TomTat", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string TomTat
		{
			get
			{
				return this._TomTat;
			}
			set
			{
				if ((this._TomTat != value))
				{
					this.OnTomTatChanging(value);
					this.SendPropertyChanging();
					this._TomTat = value;
					this.SendPropertyChanged("TomTat");
					this.OnTomTatChanged();
				}
			}
		}
		
		[Column(Storage="_NoiDung", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string NoiDung
		{
			get
			{
				return this._NoiDung;
			}
			set
			{
				if ((this._NoiDung != value))
				{
					this.OnNoiDungChanging(value);
					this.SendPropertyChanging();
					this._NoiDung = value;
					this.SendPropertyChanged("NoiDung");
					this.OnNoiDungChanged();
				}
			}
		}
		
		[Column(Storage="_NgayDang", DbType="DateTime")]
		public System.Nullable<System.DateTime> NgayDang
		{
			get
			{
				return this._NgayDang;
			}
			set
			{
				if ((this._NgayDang != value))
				{
					this.OnNgayDangChanging(value);
					this.SendPropertyChanging();
					this._NgayDang = value;
					this.SendPropertyChanged("NgayDang");
					this.OnNgayDangChanged();
				}
			}
		}
		
		[Column(Storage="_MaAdminDuyet", DbType="Int")]
		public System.Nullable<int> MaAdminDuyet
		{
			get
			{
				return this._MaAdminDuyet;
			}
			set
			{
				if ((this._MaAdminDuyet != value))
				{
					if (this._NHAN_VIEN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaAdminDuyetChanging(value);
					this.SendPropertyChanging();
					this._MaAdminDuyet = value;
					this.SendPropertyChanged("MaAdminDuyet");
					this.OnMaAdminDuyetChanged();
				}
			}
		}
		
		[Association(Name="NHAN_VIEN_TIN_TUC", Storage="_NHAN_VIEN", ThisKey="MaAdminDuyet", OtherKey="MaNhanVien", IsForeignKey=true)]
		public NHAN_VIEN NHAN_VIEN
		{
			get
			{
				return this._NHAN_VIEN.Entity;
			}
			set
			{
				NHAN_VIEN previousValue = this._NHAN_VIEN.Entity;
				if (((previousValue != value) 
							|| (this._NHAN_VIEN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NHAN_VIEN.Entity = null;
						previousValue.TIN_TUCs.Remove(this);
					}
					this._NHAN_VIEN.Entity = value;
					if ((value != null))
					{
						value.TIN_TUCs.Add(this);
						this._MaAdminDuyet = value.MaNhanVien;
					}
					else
					{
						this._MaAdminDuyet = default(Nullable<int>);
					}
					this.SendPropertyChanged("NHAN_VIEN");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.TINH_TRANG_DAT_CHO")]
	public partial class TINH_TRANG_DAT_CHO : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaTinhTrangDatCho;
		
		private string _TenTinhTrangDatCho;
		
		private EntitySet<DAT_CHO> _DAT_CHOs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaTinhTrangDatChoChanging(int value);
    partial void OnMaTinhTrangDatChoChanged();
    partial void OnTenTinhTrangDatChoChanging(string value);
    partial void OnTenTinhTrangDatChoChanged();
    #endregion
		
		public TINH_TRANG_DAT_CHO()
		{
			this._DAT_CHOs = new EntitySet<DAT_CHO>(new Action<DAT_CHO>(this.attach_DAT_CHOs), new Action<DAT_CHO>(this.detach_DAT_CHOs));
			OnCreated();
		}
		
		[Column(Storage="_MaTinhTrangDatCho", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaTinhTrangDatCho
		{
			get
			{
				return this._MaTinhTrangDatCho;
			}
			set
			{
				if ((this._MaTinhTrangDatCho != value))
				{
					this.OnMaTinhTrangDatChoChanging(value);
					this.SendPropertyChanging();
					this._MaTinhTrangDatCho = value;
					this.SendPropertyChanged("MaTinhTrangDatCho");
					this.OnMaTinhTrangDatChoChanged();
				}
			}
		}
		
		[Column(Storage="_TenTinhTrangDatCho", DbType="NVarChar(50)")]
		public string TenTinhTrangDatCho
		{
			get
			{
				return this._TenTinhTrangDatCho;
			}
			set
			{
				if ((this._TenTinhTrangDatCho != value))
				{
					this.OnTenTinhTrangDatChoChanging(value);
					this.SendPropertyChanging();
					this._TenTinhTrangDatCho = value;
					this.SendPropertyChanged("TenTinhTrangDatCho");
					this.OnTenTinhTrangDatChoChanged();
				}
			}
		}
		
		[Association(Name="TINH_TRANG_DAT_CHO_DAT_CHO", Storage="_DAT_CHOs", ThisKey="MaTinhTrangDatCho", OtherKey="TinhTrang")]
		public EntitySet<DAT_CHO> DAT_CHOs
		{
			get
			{
				return this._DAT_CHOs;
			}
			set
			{
				this._DAT_CHOs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DAT_CHOs(DAT_CHO entity)
		{
			this.SendPropertyChanging();
			entity.TINH_TRANG_DAT_CHO = this;
		}
		
		private void detach_DAT_CHOs(DAT_CHO entity)
		{
			this.SendPropertyChanging();
			entity.TINH_TRANG_DAT_CHO = null;
		}
	}
	
	[Table(Name="dbo.TINH_TRANG_XE")]
	public partial class TINH_TRANG_XE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaTinhTrangXe;
		
		private string _TenTinhTrangXe;
		
		private EntitySet<XE> _XEs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaTinhTrangXeChanging(int value);
    partial void OnMaTinhTrangXeChanged();
    partial void OnTenTinhTrangXeChanging(string value);
    partial void OnTenTinhTrangXeChanged();
    #endregion
		
		public TINH_TRANG_XE()
		{
			this._XEs = new EntitySet<XE>(new Action<XE>(this.attach_XEs), new Action<XE>(this.detach_XEs));
			OnCreated();
		}
		
		[Column(Storage="_MaTinhTrangXe", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaTinhTrangXe
		{
			get
			{
				return this._MaTinhTrangXe;
			}
			set
			{
				if ((this._MaTinhTrangXe != value))
				{
					this.OnMaTinhTrangXeChanging(value);
					this.SendPropertyChanging();
					this._MaTinhTrangXe = value;
					this.SendPropertyChanged("MaTinhTrangXe");
					this.OnMaTinhTrangXeChanged();
				}
			}
		}
		
		[Column(Storage="_TenTinhTrangXe", DbType="NVarChar(50)")]
		public string TenTinhTrangXe
		{
			get
			{
				return this._TenTinhTrangXe;
			}
			set
			{
				if ((this._TenTinhTrangXe != value))
				{
					this.OnTenTinhTrangXeChanging(value);
					this.SendPropertyChanging();
					this._TenTinhTrangXe = value;
					this.SendPropertyChanged("TenTinhTrangXe");
					this.OnTenTinhTrangXeChanged();
				}
			}
		}
		
		[Association(Name="TINH_TRANG_XE_XE", Storage="_XEs", ThisKey="MaTinhTrangXe", OtherKey="TinhTrang")]
		public EntitySet<XE> XEs
		{
			get
			{
				return this._XEs;
			}
			set
			{
				this._XEs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_XEs(XE entity)
		{
			this.SendPropertyChanging();
			entity.TINH_TRANG_XE = this;
		}
		
		private void detach_XEs(XE entity)
		{
			this.SendPropertyChanging();
			entity.TINH_TRANG_XE = null;
		}
	}
	
	[Table(Name="dbo.TUYEN_XE")]
	public partial class TUYEN_XE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaTuyenXe;
		
		private System.Nullable<double> _KhoangThoiGianDi;
		
		private System.Nullable<double> _TanSuatChuyen;
		
		private System.Nullable<int> _LuongTaiXe;
		
		private System.Nullable<int> _MaTramDi;
		
		private int _MaTramDen;
		
		private System.Nullable<int> _GiaVe;
		
		private EntitySet<CHUYEN_XE> _CHUYEN_XEs;
		
		private EntityRef<TRAM_XE> _TRAM_XE;
		
		private EntityRef<TRAM_XE> _TRAM_XE1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaTuyenXeChanging(int value);
    partial void OnMaTuyenXeChanged();
    partial void OnKhoangThoiGianDiChanging(System.Nullable<double> value);
    partial void OnKhoangThoiGianDiChanged();
    partial void OnTanSuatChuyenChanging(System.Nullable<double> value);
    partial void OnTanSuatChuyenChanged();
    partial void OnLuongTaiXeChanging(System.Nullable<int> value);
    partial void OnLuongTaiXeChanged();
    partial void OnMaTramDiChanging(System.Nullable<int> value);
    partial void OnMaTramDiChanged();
    partial void OnMaTramDenChanging(int value);
    partial void OnMaTramDenChanged();
    partial void OnGiaVeChanging(System.Nullable<int> value);
    partial void OnGiaVeChanged();
    #endregion
		
		public TUYEN_XE()
		{
			this._CHUYEN_XEs = new EntitySet<CHUYEN_XE>(new Action<CHUYEN_XE>(this.attach_CHUYEN_XEs), new Action<CHUYEN_XE>(this.detach_CHUYEN_XEs));
			this._TRAM_XE = default(EntityRef<TRAM_XE>);
			this._TRAM_XE1 = default(EntityRef<TRAM_XE>);
			OnCreated();
		}
		
		[Column(Storage="_MaTuyenXe", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaTuyenXe
		{
			get
			{
				return this._MaTuyenXe;
			}
			set
			{
				if ((this._MaTuyenXe != value))
				{
					this.OnMaTuyenXeChanging(value);
					this.SendPropertyChanging();
					this._MaTuyenXe = value;
					this.SendPropertyChanged("MaTuyenXe");
					this.OnMaTuyenXeChanged();
				}
			}
		}
		
		[Column(Storage="_KhoangThoiGianDi", DbType="Float")]
		public System.Nullable<double> KhoangThoiGianDi
		{
			get
			{
				return this._KhoangThoiGianDi;
			}
			set
			{
				if ((this._KhoangThoiGianDi != value))
				{
					this.OnKhoangThoiGianDiChanging(value);
					this.SendPropertyChanging();
					this._KhoangThoiGianDi = value;
					this.SendPropertyChanged("KhoangThoiGianDi");
					this.OnKhoangThoiGianDiChanged();
				}
			}
		}
		
		[Column(Storage="_TanSuatChuyen", DbType="Float")]
		public System.Nullable<double> TanSuatChuyen
		{
			get
			{
				return this._TanSuatChuyen;
			}
			set
			{
				if ((this._TanSuatChuyen != value))
				{
					this.OnTanSuatChuyenChanging(value);
					this.SendPropertyChanging();
					this._TanSuatChuyen = value;
					this.SendPropertyChanged("TanSuatChuyen");
					this.OnTanSuatChuyenChanged();
				}
			}
		}
		
		[Column(Storage="_LuongTaiXe", DbType="Int")]
		public System.Nullable<int> LuongTaiXe
		{
			get
			{
				return this._LuongTaiXe;
			}
			set
			{
				if ((this._LuongTaiXe != value))
				{
					this.OnLuongTaiXeChanging(value);
					this.SendPropertyChanging();
					this._LuongTaiXe = value;
					this.SendPropertyChanged("LuongTaiXe");
					this.OnLuongTaiXeChanged();
				}
			}
		}
		
		[Column(Storage="_MaTramDi", DbType="Int")]
		public System.Nullable<int> MaTramDi
		{
			get
			{
				return this._MaTramDi;
			}
			set
			{
				if ((this._MaTramDi != value))
				{
					if (this._TRAM_XE1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaTramDiChanging(value);
					this.SendPropertyChanging();
					this._MaTramDi = value;
					this.SendPropertyChanged("MaTramDi");
					this.OnMaTramDiChanged();
				}
			}
		}
		
		[Column(Storage="_MaTramDen", DbType="Int NOT NULL")]
		public int MaTramDen
		{
			get
			{
				return this._MaTramDen;
			}
			set
			{
				if ((this._MaTramDen != value))
				{
					if (this._TRAM_XE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaTramDenChanging(value);
					this.SendPropertyChanging();
					this._MaTramDen = value;
					this.SendPropertyChanged("MaTramDen");
					this.OnMaTramDenChanged();
				}
			}
		}
		
		[Column(Storage="_GiaVe", DbType="Int")]
		public System.Nullable<int> GiaVe
		{
			get
			{
				return this._GiaVe;
			}
			set
			{
				if ((this._GiaVe != value))
				{
					this.OnGiaVeChanging(value);
					this.SendPropertyChanging();
					this._GiaVe = value;
					this.SendPropertyChanged("GiaVe");
					this.OnGiaVeChanged();
				}
			}
		}
		
		[Association(Name="TUYEN_XE_CHUYEN_XE", Storage="_CHUYEN_XEs", ThisKey="MaTuyenXe", OtherKey="MaTuyenXe")]
		public EntitySet<CHUYEN_XE> CHUYEN_XEs
		{
			get
			{
				return this._CHUYEN_XEs;
			}
			set
			{
				this._CHUYEN_XEs.Assign(value);
			}
		}
		
		[Association(Name="TRAM_XE_TUYEN_XE", Storage="_TRAM_XE", ThisKey="MaTramDen", OtherKey="MaTramXe", IsForeignKey=true)]
		public TRAM_XE TRAM_XE
		{
			get
			{
				return this._TRAM_XE.Entity;
			}
			set
			{
				TRAM_XE previousValue = this._TRAM_XE.Entity;
				if (((previousValue != value) 
							|| (this._TRAM_XE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TRAM_XE.Entity = null;
						previousValue.TUYEN_XEs.Remove(this);
					}
					this._TRAM_XE.Entity = value;
					if ((value != null))
					{
						value.TUYEN_XEs.Add(this);
						this._MaTramDen = value.MaTramXe;
					}
					else
					{
						this._MaTramDen = default(int);
					}
					this.SendPropertyChanged("TRAM_XE");
				}
			}
		}
		
		[Association(Name="TRAM_XE_TUYEN_XE1", Storage="_TRAM_XE1", ThisKey="MaTramDi", OtherKey="MaTramXe", IsForeignKey=true)]
		public TRAM_XE TRAM_XE1
		{
			get
			{
				return this._TRAM_XE1.Entity;
			}
			set
			{
				TRAM_XE previousValue = this._TRAM_XE1.Entity;
				if (((previousValue != value) 
							|| (this._TRAM_XE1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TRAM_XE1.Entity = null;
						previousValue.TUYEN_XEs1.Remove(this);
					}
					this._TRAM_XE1.Entity = value;
					if ((value != null))
					{
						value.TUYEN_XEs1.Add(this);
						this._MaTramDi = value.MaTramXe;
					}
					else
					{
						this._MaTramDi = default(Nullable<int>);
					}
					this.SendPropertyChanged("TRAM_XE1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CHUYEN_XEs(CHUYEN_XE entity)
		{
			this.SendPropertyChanging();
			entity.TUYEN_XE = this;
		}
		
		private void detach_CHUYEN_XEs(CHUYEN_XE entity)
		{
			this.SendPropertyChanging();
			entity.TUYEN_XE = null;
		}
	}
	
	[Table(Name="dbo.TRAM_XE")]
	public partial class TRAM_XE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaTramXe;
		
		private string _TenTramXe;
		
		private string _DiaChi;
		
		private string _HinhAnh;
		
		private System.Nullable<int> _MaTruongTram;
		
		private EntitySet<TUYEN_XE> _TUYEN_XEs;
		
		private EntitySet<TUYEN_XE> _TUYEN_XEs1;
		
		private EntityRef<NHAN_VIEN> _NHAN_VIEN;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaTramXeChanging(int value);
    partial void OnMaTramXeChanged();
    partial void OnTenTramXeChanging(string value);
    partial void OnTenTramXeChanged();
    partial void OnDiaChiChanging(string value);
    partial void OnDiaChiChanged();
    partial void OnHinhAnhChanging(string value);
    partial void OnHinhAnhChanged();
    partial void OnMaTruongTramChanging(System.Nullable<int> value);
    partial void OnMaTruongTramChanged();
    #endregion
		
		public TRAM_XE()
		{
			this._TUYEN_XEs = new EntitySet<TUYEN_XE>(new Action<TUYEN_XE>(this.attach_TUYEN_XEs), new Action<TUYEN_XE>(this.detach_TUYEN_XEs));
			this._TUYEN_XEs1 = new EntitySet<TUYEN_XE>(new Action<TUYEN_XE>(this.attach_TUYEN_XEs1), new Action<TUYEN_XE>(this.detach_TUYEN_XEs1));
			this._NHAN_VIEN = default(EntityRef<NHAN_VIEN>);
			OnCreated();
		}
		
		[Column(Storage="_MaTramXe", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaTramXe
		{
			get
			{
				return this._MaTramXe;
			}
			set
			{
				if ((this._MaTramXe != value))
				{
					this.OnMaTramXeChanging(value);
					this.SendPropertyChanging();
					this._MaTramXe = value;
					this.SendPropertyChanged("MaTramXe");
					this.OnMaTramXeChanged();
				}
			}
		}
		
		[Column(Storage="_TenTramXe", DbType="NVarChar(50)")]
		public string TenTramXe
		{
			get
			{
				return this._TenTramXe;
			}
			set
			{
				if ((this._TenTramXe != value))
				{
					this.OnTenTramXeChanging(value);
					this.SendPropertyChanging();
					this._TenTramXe = value;
					this.SendPropertyChanged("TenTramXe");
					this.OnTenTramXeChanged();
				}
			}
		}
		
		[Column(Storage="_DiaChi", DbType="NVarChar(50)")]
		public string DiaChi
		{
			get
			{
				return this._DiaChi;
			}
			set
			{
				if ((this._DiaChi != value))
				{
					this.OnDiaChiChanging(value);
					this.SendPropertyChanging();
					this._DiaChi = value;
					this.SendPropertyChanged("DiaChi");
					this.OnDiaChiChanged();
				}
			}
		}
		
		[Column(Storage="_HinhAnh", DbType="NVarChar(50)")]
		public string HinhAnh
		{
			get
			{
				return this._HinhAnh;
			}
			set
			{
				if ((this._HinhAnh != value))
				{
					this.OnHinhAnhChanging(value);
					this.SendPropertyChanging();
					this._HinhAnh = value;
					this.SendPropertyChanged("HinhAnh");
					this.OnHinhAnhChanged();
				}
			}
		}
		
		[Column(Storage="_MaTruongTram", DbType="Int")]
		public System.Nullable<int> MaTruongTram
		{
			get
			{
				return this._MaTruongTram;
			}
			set
			{
				if ((this._MaTruongTram != value))
				{
					if (this._NHAN_VIEN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaTruongTramChanging(value);
					this.SendPropertyChanging();
					this._MaTruongTram = value;
					this.SendPropertyChanged("MaTruongTram");
					this.OnMaTruongTramChanged();
				}
			}
		}
		
		[Association(Name="TRAM_XE_TUYEN_XE", Storage="_TUYEN_XEs", ThisKey="MaTramXe", OtherKey="MaTramDen")]
		public EntitySet<TUYEN_XE> TUYEN_XEs
		{
			get
			{
				return this._TUYEN_XEs;
			}
			set
			{
				this._TUYEN_XEs.Assign(value);
			}
		}
		
		[Association(Name="TRAM_XE_TUYEN_XE1", Storage="_TUYEN_XEs1", ThisKey="MaTramXe", OtherKey="MaTramDi")]
		public EntitySet<TUYEN_XE> TUYEN_XEs1
		{
			get
			{
				return this._TUYEN_XEs1;
			}
			set
			{
				this._TUYEN_XEs1.Assign(value);
			}
		}
		
		[Association(Name="NHAN_VIEN_TRAM_XE", Storage="_NHAN_VIEN", ThisKey="MaTruongTram", OtherKey="MaNhanVien", IsForeignKey=true)]
		public NHAN_VIEN NHAN_VIEN
		{
			get
			{
				return this._NHAN_VIEN.Entity;
			}
			set
			{
				NHAN_VIEN previousValue = this._NHAN_VIEN.Entity;
				if (((previousValue != value) 
							|| (this._NHAN_VIEN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NHAN_VIEN.Entity = null;
						previousValue.TRAM_XEs.Remove(this);
					}
					this._NHAN_VIEN.Entity = value;
					if ((value != null))
					{
						value.TRAM_XEs.Add(this);
						this._MaTruongTram = value.MaNhanVien;
					}
					else
					{
						this._MaTruongTram = default(Nullable<int>);
					}
					this.SendPropertyChanged("NHAN_VIEN");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TUYEN_XEs(TUYEN_XE entity)
		{
			this.SendPropertyChanging();
			entity.TRAM_XE = this;
		}
		
		private void detach_TUYEN_XEs(TUYEN_XE entity)
		{
			this.SendPropertyChanging();
			entity.TRAM_XE = null;
		}
		
		private void attach_TUYEN_XEs1(TUYEN_XE entity)
		{
			this.SendPropertyChanging();
			entity.TRAM_XE1 = this;
		}
		
		private void detach_TUYEN_XEs1(TUYEN_XE entity)
		{
			this.SendPropertyChanging();
			entity.TRAM_XE1 = null;
		}
	}
}
#pragma warning restore 1591
